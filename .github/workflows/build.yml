# based on https://github.com/Arcnor/MiyooCFW/blob/ci/.github/workflows/main.yml
name: Build

# Run on changes (including automated ones from the update job), and allow manual triggering from the Actions tab
on: [push, pull_request, workflow_dispatch]

# todo: figure out how to use reusable workflows or actions or something to reduce the amount of
# duplication between this and the submodule's build configurations

jobs:

  # https://github.com/MiyooCFW/uboot/blob/master/.github/workflows/main.yml
  uboot:
    runs-on: ubuntu-20.04
    container:
      image: nfriedly/miyoo-toolchain:latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        git submodule update --init --recursive -- uboot
        cd uboot
        make miyoo_defconfig 
        make
    - uses: actions/upload-artifact@v2
      with:
        name: uboot
        path: uboot/u-boot-sunxi-with-spl.bin
        if-no-files-found: error # 'error', 'warn', 'ignore'; defaults to `warn`

  # https://github.com/MiyooCFW/kernel/blob/master/.github/workflows/c-cpp.yml
  # todo: 1-bit sd card variant
  kernel:
    runs-on: ubuntu-20.04
    container:
      image: nfriedly/miyoo-toolchain:latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        git submodule update --init --recursive -- kernel
        cd kernel
        make miyoo_defconfig 
        make zImage
        make M=$PwD
        mkdir dist
        mv arch/arm/boot/dts/suniv-f1c500s-miyoo.dts dist/
        mv arch/arm/boot/zImage dist/
        mv drivers/video/fbdev/core/*.ko dist/
        mv drivers/video/fbdev/r61520fb.ko dist/
    - uses: actions/upload-artifact@v2
      with:
        name: kernel
        path: kernel/dist/*
        if-no-files-found: error # 'error', 'warn', 'ignore'; defaults to `warn`

  # https://github.com/MiyooCFW/logo/blob/master/.github/workflows/c-cpp.yml
  # todo: bittboy and pocketgo logos
  logo:
    runs-on: ubuntu-20.04
    container:
      image: nfriedly/miyoo-toolchain:latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        git submodule update --init --recursive -- logo
        cd logo
        make -f Makefile.powkiddy
    - uses: actions/upload-artifact@v2
      with:
        name: boot-logo-powkiddy
        path: logo/boot-logo
        if-no-files-found: error # 'error', 'warn', 'ignore'; defaults to `warn`

  build-image:
    needs: 
    - uboot
    - kernel
    - logo
    runs-on: ubuntu-latest
    steps:
      #- uses: actions/checkout@v3
    - uses: actions/download-artifact@v2
      with:
        name: uboot
        path: u-boot.bin
    - uses: actions/download-artifact@v2
      with:
        name: kernel
        path: kernel.zip
    - uses: actions/download-artifact@v2
      with:
        name: boot-logo-powkiddy
        path: boot-logo
    - run: |
        unzip kernel.zip
        ls -l
